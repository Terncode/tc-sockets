"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getIgnore = exports.getMethodsDefArray = exports.getNames = exports.Bin = void 0;
var Bin;
(function (Bin) {
    Bin[Bin["I8"] = 0] = "I8";
    Bin[Bin["U8"] = 1] = "U8";
    Bin[Bin["I16"] = 2] = "I16";
    Bin[Bin["U16"] = 3] = "U16";
    Bin[Bin["I32"] = 4] = "I32";
    Bin[Bin["U32"] = 5] = "U32";
    Bin[Bin["F32"] = 6] = "F32";
    Bin[Bin["F64"] = 7] = "F64";
    Bin[Bin["Bool"] = 8] = "Bool";
    Bin[Bin["Str"] = 9] = "Str";
    Bin[Bin["Obj"] = 10] = "Obj";
    Bin[Bin["Buffer"] = 11] = "Buffer";
    Bin[Bin["U8Array"] = 12] = "U8Array";
    Bin[Bin["Raw"] = 13] = "Raw";
    Bin[Bin["U8ArrayOffsetLength"] = 14] = "U8ArrayOffsetLength";
    Bin[Bin["DataViewOffsetLength"] = 15] = "DataViewOffsetLength";
})(Bin = exports.Bin || (exports.Bin = {}));
function getNames(methods) {
    return methods.map(function (i) { return typeof i === 'string' ? i : i[0]; });
}
exports.getNames = getNames;
function getMethodsDefArray(methods) {
    return methods.map(function (i) { return typeof i === 'string' ? [i, {}] : i; });
}
exports.getMethodsDefArray = getMethodsDefArray;
function getIgnore(methods) {
    return methods.map(function (i) { return (typeof i !== 'string' && i[1].ignore) ? i[0] : null; }).filter(function (x) { return !!x; });
}
exports.getIgnore = getIgnore;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb21tb24vaW50ZXJmYWNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFxQ0EsSUFBWSxHQWlCWDtBQWpCRCxXQUFZLEdBQUc7SUFDZCx5QkFBRSxDQUFBO0lBQ0YseUJBQUUsQ0FBQTtJQUNGLDJCQUFHLENBQUE7SUFDSCwyQkFBRyxDQUFBO0lBQ0gsMkJBQUcsQ0FBQTtJQUNILDJCQUFHLENBQUE7SUFDSCwyQkFBRyxDQUFBO0lBQ0gsMkJBQUcsQ0FBQTtJQUNILDZCQUFJLENBQUE7SUFDSiwyQkFBRyxDQUFBO0lBQ0gsNEJBQUcsQ0FBQTtJQUNILGtDQUFNLENBQUE7SUFDTixvQ0FBTyxDQUFBO0lBQ1AsNEJBQUcsQ0FBQTtJQUNILDREQUFtQixDQUFBO0lBQ25CLDhEQUFvQixDQUFBO0FBQ3JCLENBQUMsRUFqQlcsR0FBRyxHQUFILFdBQUcsS0FBSCxXQUFHLFFBaUJkO0FBNEVELFNBQWdCLFFBQVEsQ0FBQyxPQUFvQjtJQUM1QyxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxPQUFPLENBQUMsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFoQyxDQUFnQyxDQUFDLENBQUM7QUFDM0QsQ0FBQztBQUZELDRCQUVDO0FBRUQsU0FBZ0Isa0JBQWtCLENBQUMsT0FBb0I7SUFDdEQsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsT0FBTyxDQUFDLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFuQyxDQUFtQyxDQUFDLENBQUM7QUFDOUQsQ0FBQztBQUZELGdEQUVDO0FBRUQsU0FBZ0IsU0FBUyxDQUFDLE9BQW9CO0lBQzdDLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsT0FBTyxDQUFDLEtBQUssUUFBUSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQXBELENBQW9ELENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsQ0FBQyxFQUFILENBQUcsQ0FBYSxDQUFDO0FBQzVHLENBQUM7QUFGRCw4QkFFQyIsImZpbGUiOiJjb21tb24vaW50ZXJmYWNlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgTG9nZ2VyIHtcblx0KC4uLmFyZ3M6IGFueVtdKTogdm9pZDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGdW5jTGlzdCB7XG5cdFtuYW1lOiBzdHJpbmddOiBGdW5jdGlvbiB8IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTb2NrZXRTZXJ2ZXIge1xuXHRbbmFtZTogc3RyaW5nXTogYW55O1xuXHRjb25uZWN0ZWQ/KCk6IHZvaWQ7XG5cdGRpc2Nvbm5lY3RlZD8oY29kZTogbnVtYmVyLCByZWFzb246IHN0cmluZyk6IHZvaWQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU29ja2V0Q2xpZW50IHtcblx0W25hbWU6IHN0cmluZ106IGFueTtcblx0Y29ubmVjdGVkPygpOiB2b2lkO1xuXHRkaXNjb25uZWN0ZWQ/KGNvZGU6IG51bWJlciwgcmVhc29uOiBzdHJpbmcpOiB2b2lkO1xuXHRpbnZhbGlkVmVyc2lvbj8oZXhwZWN0ZWQ6IHN0cmluZywgYWN0dWFsOiBzdHJpbmcpOiB2b2lkO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNvY2tldFNlcnZpY2U8VENsaWVudCBleHRlbmRzIFNvY2tldENsaWVudCwgVFNlcnZlciBleHRlbmRzIFNvY2tldFNlcnZlcj4ge1xuXHRjbGllbnQ6IFRDbGllbnQ7XG5cdHNlcnZlcjogVFNlcnZlcjtcblx0c2VudFNpemU6IG51bWJlcjtcblx0cmVjZWl2ZWRTaXplOiBudW1iZXI7XG5cdHNlbnRQYWNrZXRzOiBudW1iZXI7XG5cdHJlY2VpdmVkUGFja2V0czogbnVtYmVyO1xuXHRsYXN0UGFja2V0OiBudW1iZXI7XG5cdGlzQ29ubmVjdGVkOiBib29sZWFuO1xuXHRzdXBwb3J0c0JpbmFyeTogYm9vbGVhbjtcblx0b3B0aW9uczogQ2xpZW50T3B0aW9ucztcblx0Y29ubmVjdCgpOiB2b2lkO1xuXHRkaXNjb25uZWN0KCk6IHZvaWQ7XG5cdHNvY2tldCgpOiBXZWJTb2NrZXQgfCBudWxsO1xufVxuXG5leHBvcnQgZW51bSBCaW4ge1xuXHRJOCxcblx0VTgsXG5cdEkxNixcblx0VTE2LFxuXHRJMzIsXG5cdFUzMixcblx0RjMyLFxuXHRGNjQsXG5cdEJvb2wsXG5cdFN0cixcblx0T2JqLFxuXHRCdWZmZXIsXG5cdFU4QXJyYXksXG5cdFJhdyxcblx0VThBcnJheU9mZnNldExlbmd0aCxcblx0RGF0YVZpZXdPZmZzZXRMZW5ndGgsXG59XG5cbmV4cG9ydCB0eXBlIEJpbmFyeURlZiA9IChCaW4gfCAoQmluIHwgKEJpbiB8IGFueVtdKSlbXSlbXTtcbmV4cG9ydCB0eXBlIE1ldGhvZERlZiA9IHN0cmluZyB8IFtzdHJpbmcsIE1ldGhvZE9wdGlvbnNdO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1ldGhvZE9wdGlvbnMge1xuXHQvKiogYmluYXJ5IGRlZmluaXRpb24gb2YgdGhlIHBhY2tldCAqL1xuXHRiaW5hcnk/OiBCaW5hcnlEZWY7XG5cdC8qKiB0cnVlIGlmIHByb21pc2UgaGFuZGxpbmcgc2hvdWxkIGJlIGdlbmVyYXRlZCBvbiBjbGllbnQgc2lkZSAqL1xuXHRwcm9taXNlPzogYm9vbGVhbjtcblx0LyoqIG5hbWUgb2YgdGhlIGZpZWxkIHRvIHNldCB0byB0cnVlIGlmIHRoZXJlIGlzIG91dHN0YW5kaW5nIHByb21pc2UgZm9yIHRoaXMgbWV0aG9kICovXG5cdHByb2dyZXNzPzogc3RyaW5nO1xuXHQvKiogdHJ1ZSBpZiBtZXRob2Qgc2hvdWxkIGJlIGlnbm9yZWQgd2hlbiBsb2dnaW5nIG1lc3NhZ2VzIGluIGRlYnVnIG1vZGUgKi9cblx0aWdub3JlPzogYm9vbGVhbjtcblx0LyoqIHJhdGUgbGltaXQgaW4gZm9ybWF0IG9mIFwiMS9zXCIgb3IgXCIxMC8zMHNcIiBvciBcIjIwL21cIiAqL1xuXHRyYXRlTGltaXQ/OiBzdHJpbmc7XG5cdC8qKiByYXRlIGxpbWl0IGZvciB0aGUgc2VydmVyICovXG5cdHNlcnZlclJhdGVMaW1pdD86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNZXRob2RNZXRhZGF0YSB7XG5cdG5hbWU6IHN0cmluZztcblx0b3B0aW9uczogTWV0aG9kT3B0aW9ucztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb21tb25PcHRpb25zIHtcblx0aWQ/OiBzdHJpbmc7XG5cdC8qKiBob3N0IG9mIHdlYnNvY2tldCBlbmRwb2ludCwgdGhlIHNhbWUgaG9zdCBhcyB0aGUgc2l0ZSBieSBkZWZhdWx0ICovXG5cdGhvc3Q/OiBzdHJpbmc7XG5cdC8qKiBwYXRoIHRvIHdlYnNvY2tldCBlbmRwb2ludCwgJy93cycgYnkgZGVmYXVsdCAqL1xuXHRwYXRoPzogc3RyaW5nO1xuXHQvKiogdHJ1ZSB0byBmb3JjZSBTU0wgd2Vic29ja2V0cyBvbiBub24tU1NMIHdlYnNpdGUgKi9cblx0c3NsPzogYm9vbGVhbjtcblx0LyoqIHBpbmcgaW50ZXJ2YWwgaW4gbWlsbGlzZWNvbmRzLCBwaW5nIGRpc2FibGVkIGlmIG5vdCBzcGVjaWZpZWQgb3IgMCAqL1xuXHRwaW5nSW50ZXJ2YWw/OiBudW1iZXI7XG5cdC8qKiBkZWxheSBmb3IgY2xpZW50IHRvIHdhaXQgYmVmb3JlIHRyeWluZyB0byByZWNvbm5lY3QgaW4gbWlsbGlzZWNvbmRzICovXG5cdHJlY29ubmVjdFRpbWVvdXQ/OiBudW1iZXI7XG5cdC8qKiBsb2cgZGVidWcgaW5mb3JtYXRpb24gdG8gY29uc29sZSAqL1xuXHRkZWJ1Zz86IGJvb2xlYW47XG5cdC8qKiBsb2cgYWRkaXRpb25hbCBlcnJvcnMgdG8gY29uc29sZSAqL1xuXHRkZXZlbG9wbWVudD86IGJvb2xlYW47XG5cdC8qKiB2ZXJzaW9uIGhhc2ggKi9cblx0aGFzaD86IHN0cmluZztcblx0LyoqIGN1c3RvbSByZXF1ZXN0IHBhcmFtZXRlcnMgKi9cblx0cmVxdWVzdFBhcmFtcz86IGFueTtcblx0LyoqIGZpcnN0IElEIHRvIGFzc2lnbiB0byBjbGllbnQgKi9cblx0Y2xpZW50QmFzZUlkPzogbnVtYmVyO1xuXHQvKiogYWx3YXlzIHNlbmQgY29weSBvZiBidWZmZXIgb24gY2xpZW50IHNpZGUgKi9cblx0Y29weVNlbmRCdWZmZXI/OiBib29sZWFuO1xuXHR1c2VCaW5hcnlCeURlZmF1bHQ/OiBib29sZWFuO1xufVxuXG5leHBvcnQgdHlwZSBPblNlbmQgPSAoaWQ6IG51bWJlciwgbmFtZTogc3RyaW5nLCBzaXplOiBudW1iZXIsIGJpbmFyeTogYm9vbGVhbikgPT4gdm9pZDtcbmV4cG9ydCB0eXBlIE9uUmVjdiA9IChpZDogbnVtYmVyLCBuYW1lOiBzdHJpbmcsIHNpemU6IG51bWJlciwgYmluYXJ5OiBib29sZWFuLCBkYXRhPzogRGF0YVZpZXcsIGFjdGlvbnM/OiBhbnkpID0+IHZvaWQ7XG5cbi8vIFRPRE86IHJlbW92ZVxuZXhwb3J0IGludGVyZmFjZSBQYWNrZXQge1xuXHRpZDogbnVtYmVyO1xuXHRuYW1lOiBzdHJpbmc7XG5cdGFyZ3M6IGFueVtdO1xuXHRiaW5hcnk/OiBVaW50OEFycmF5O1xuXHRqc29uPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENsaWVudE9wdGlvbnMgZXh0ZW5kcyBDb21tb25PcHRpb25zIHtcblx0Y2xpZW50OiBNZXRob2REZWZbXTtcblx0c2VydmVyOiBNZXRob2REZWZbXTtcblx0dG9rZW5MaWZldGltZT86IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBSZW1vdGVPcHRpb25zIHtcblx0bG9nPzogTG9nZ2VyO1xuXHRvblNlbmQ/OiBPblNlbmQ7XG5cdG9uUmVjdj86IE9uUmVjdjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldE5hbWVzKG1ldGhvZHM6IE1ldGhvZERlZltdKSB7XG5cdHJldHVybiBtZXRob2RzLm1hcChpID0+IHR5cGVvZiBpID09PSAnc3RyaW5nJyA/IGkgOiBpWzBdKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldE1ldGhvZHNEZWZBcnJheShtZXRob2RzOiBNZXRob2REZWZbXSk6IFtzdHJpbmcsIE1ldGhvZE9wdGlvbnNdW10ge1xuXHRyZXR1cm4gbWV0aG9kcy5tYXAoaSA9PiB0eXBlb2YgaSA9PT0gJ3N0cmluZycgPyBbaSwge31dIDogaSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRJZ25vcmUobWV0aG9kczogTWV0aG9kRGVmW10pIHtcblx0cmV0dXJuIG1ldGhvZHMubWFwKGkgPT4gKHR5cGVvZiBpICE9PSAnc3RyaW5nJyAmJiBpWzFdLmlnbm9yZSkgPyBpWzBdIDogbnVsbCkuZmlsdGVyKHggPT4gISF4KSBhcyBzdHJpbmdbXTtcbn1cblxuLy8gcmF0ZSBsaW1pdGluZ1xuXG5leHBvcnQgaW50ZXJmYWNlIFJhdGVMaW1pdERlZiB7XG5cdHByb21pc2U6IGJvb2xlYW47XG5cdGxpbWl0OiBudW1iZXI7XG5cdGZyYW1lOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmF0ZUxpbWl0IHtcblx0bGltaXQ6IG51bWJlcjtcblx0ZnJhbWU6IG51bWJlcjtcblx0Y2FsbHM6IG51bWJlcltdO1xuXHRwcm9taXNlPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IHR5cGUgUmF0ZUxpbWl0cyA9IChSYXRlTGltaXQgfCB1bmRlZmluZWQpW107XG4iXSwic291cmNlUm9vdCI6Ii9ob21lL2FscGhhL0Rlc2t0b3AvZGV2L3RjLXNvY2tldHMvc3JjIn0=
